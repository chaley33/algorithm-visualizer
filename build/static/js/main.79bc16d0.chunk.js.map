{"version":3,"sources":["Tile.tsx","Board.tsx","TileSelector.tsx","App.tsx","index.tsx"],"names":["TileEnum","Tile","props","state","type","Default","className","this","selectedType","handleSpecialRemovals","setState","Start","placeStart","Goal","placeGoal","Wall","removeStart","removeGoal","isDown","changeType","onMouseDownCapture","bind","onMouseEnter","handleMouseEnter","HoverTile","React","Component","useState","opacity","setOpacity","onMouseLeave","style","Board","startPlaced","goalPlaced","i","id","selectedTileType","tiles","push","renderSquare","onContextMenu","e","preventDefault","onMouseDown","mouseDown","onMouseUp","onDragStart","TileSelector","StylesProvider","injectFirst","Button","variant","onClick","setSelectedTileType","App","down","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAEYA,E,+GAAAA,O,qBAAAA,I,iBAAAA,I,eAAAA,I,eAAAA,I,6BAAAA,I,oCAAAA,M,SASSC,E,kDAgBnB,WAAYC,GASR,IAAD,8BACD,cAAMA,IACDC,MAAQ,CACXC,KAAMJ,EAASK,QACfC,UAAW,gBAJZ,E,8CAQH,WAAc,IAAD,OACPC,KAAKL,MAAMM,eAAiBD,KAAKJ,MAAMC,OACzCG,KAAKE,wBAELF,KAAKG,SAAS,CAAEN,KAAMG,KAAKL,MAAMM,eAAgB,WAC/C,OAAQ,EAAKL,MAAMC,MACjB,KAAKJ,EAASK,QACZ,EAAKK,SAAS,CAAEJ,UAAW,iBAC3B,MACF,KAAKN,EAASW,MACZ,IAAK,EAAKT,MAAMU,aAAc,MAC9B,EAAKF,SAAS,CAAEJ,UAAW,eAC3B,MACF,KAAKN,EAASa,KACZ,IAAK,EAAKX,MAAMY,YAAa,MAC7B,EAAKJ,SAAS,CAAEJ,UAAW,cAC3B,MACF,KAAKN,EAASe,KACZ,EAAKL,SAAS,CAAEJ,UAAW,qB,mCAOrC,WACMC,KAAKJ,MAAMC,OAASJ,EAASW,MAAOJ,KAAKL,MAAMc,cAC1CT,KAAKJ,MAAMC,OAASJ,EAASa,MAAMN,KAAKL,MAAMe,e,8BAGzD,WACMV,KAAKL,MAAMgB,QACbX,KAAKY,e,oBAIT,WACE,IAAMb,EAAYC,KAAKJ,MAAMG,UAC7B,OACE,qBACEA,UAAWA,EACXc,mBAAoBb,KAAKY,WAAWE,KAAKd,MACzCe,aAAcf,KAAKgB,iBAAiBF,KAAKd,MAH3C,SAKE,cAACiB,EAAD,U,GA7E0BC,IAAMC,WAmFxC,SAASF,IACP,MAA8BG,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,OACE,qBACEvB,UAAU,aACVgB,aAAc,kBAAMO,EAAW,KAC/BC,aAAc,kBAAMD,EAAW,IAC/BE,MAAO,CAAEH,QAASA,K,ICjGHI,E,kDAQnB,WAAY9B,GAIR,IAAD,8BACD,cAAMA,IAEDC,MAAQ,CACX8B,aAAa,EACbC,YAAY,GAGd,EAAKtB,WAAa,EAAKA,WAAWS,KAAhB,gBAClB,EAAKP,UAAY,EAAKA,UAAUO,KAAf,gBACjB,EAAKL,YAAc,EAAKA,YAAYK,KAAjB,gBACnB,EAAKJ,WAAa,EAAKA,WAAWI,KAAhB,gBAXjB,E,8CAcH,WACE,OAAKd,KAAKJ,MAAM8B,cACd1B,KAAKG,SAAS,CAAEuB,aAAa,KACtB,K,uBAIX,WACE,OAAK1B,KAAKJ,MAAM+B,aACd3B,KAAKG,SAAS,CAAEwB,YAAY,KACrB,K,yBAIX,WACE3B,KAAKG,SAAS,CAAEuB,aAAa,M,wBAG/B,WACE1B,KAAKG,SAAS,CAAEwB,YAAY,M,0BAG9B,SAAaC,GACX,OACE,cAAC,EAAD,CAEEC,GAAID,EACJjB,OAAQX,KAAKL,MAAMgB,OACnBV,aAAcD,KAAKL,MAAMmC,iBACzBzB,WAAYL,KAAKK,WACjBE,UAAWP,KAAKO,UAChBE,YAAaT,KAAKS,YAClBC,WAAYV,KAAKU,YAPZkB,K,oBAYX,WAGE,IAHQ,IAAD,OACHG,EAAQ,GAEHH,EAAI,EAAGA,EAAI,IAAKA,IACvBG,EAAMC,KAAKhC,KAAKiC,aAAaL,IAG/B,OACE,mCACE,qBACE7B,UAAU,QACVmC,cAAe,SAACC,GAAD,OAAOA,EAAEC,kBACxBC,YAAa,kBAAM,EAAK1C,MAAM2C,WAAU,IACxCC,UAAW,kBAAM,EAAK5C,MAAM2C,WAAU,IACtCE,YAAa,SAACL,GAAD,OAAOA,EAAEC,kBALxB,SAOGL,U,GA/EwBb,IAAMC,W,gBCCpBsB,E,4JAKnB,WAAU,IAAD,OACP,OACE,cAACC,EAAA,EAAD,CAAgBC,aAAW,EAA3B,SACE,sBAAK5C,UAAU,eAAf,UACE,cAAC6C,EAAA,EAAD,CACEC,QAAQ,YACR9C,UAAU,YACV+C,QAAS,kBAAM,EAAKnD,MAAMoD,oBAAoBtD,EAASW,QAHzD,mBAOA,cAACwC,EAAA,EAAD,CACEC,QAAQ,YACR9C,UAAU,WACV+C,QAAS,kBAAM,EAAKnD,MAAMoD,oBAAoBtD,EAASa,OAHzD,kBAOA,cAACsC,EAAA,EAAD,CACEC,QAAQ,YACR9C,UAAU,WACV+C,QAAS,kBAAM,EAAKnD,MAAMoD,oBAAoBtD,EAASe,OAHzD,kBAOA,cAACoC,EAAA,EAAD,CACEC,QAAQ,YACR9C,UAAU,YACV+C,QAAS,kBAAM,EAAKnD,MAAMoD,oBAAoBtD,EAASK,UAHzD,mBAOA,cAAC8C,EAAA,EAAD,CACEC,QAAQ,YACR9C,UAAU,WACV+C,QAAS,kBAAM,EAAKnD,MAAMoD,oBAAoBtD,EAASK,UAHzD,2B,GArCgCoB,IAAMC,WCC3B6B,E,kDAInB,WAAYrD,GAAY,IAAD,8BACrB,cAAMA,IAEDC,MAAQ,CAAEe,QAAQ,EAAOmB,iBAAkBrC,EAASK,SAEzD,EAAKwC,UAAY,EAAKA,UAAUxB,KAAf,gBACjB,EAAKiC,oBAAsB,EAAKA,oBAAoBjC,KAAzB,gBANN,E,6CASvB,SAAUmC,GACRjD,KAAKG,SAAS,CAAEQ,OAAQsC,M,iCAG1B,SAAoBpD,GAClBG,KAAKG,SAAS,CAAE2B,iBAAkBjC,M,oBAGpC,WAAU,IAAD,OACDc,EAASX,KAAKJ,MAAMe,OACpBmB,EAAmB9B,KAAKJ,MAAMkC,iBAEpC,OACE,sBACE/B,UAAU,MACVwC,UAAW,kBAAM,EAAKD,WAAU,IAChCf,aAAc,kBAAM,EAAKe,WAAU,IAHrC,UAKE,cAAC,EAAD,CAAcS,oBAAqB/C,KAAK+C,sBACxC,cAAC,EAAD,CAAOpC,OAAQA,EAAQ2B,UAAWtC,KAAKsC,UAAWR,iBAAkBA,W,GAhC3CZ,IAAMC,WCDvC+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.79bc16d0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport enum TileEnum {\r\n  Default,\r\n  Start,\r\n  Goal,\r\n  Wall,\r\n  OptimalPath,\r\n  SuboptimalPath,\r\n}\r\n\r\nexport default class Tile extends React.Component<\r\n  {\r\n    key: number;\r\n    id: number;\r\n    isDown: boolean;\r\n    selectedType: TileEnum;\r\n    placeStart: () => boolean;\r\n    placeGoal: () => boolean;\r\n    removeStart: () => void;\r\n    removeGoal: () => void;\r\n  },\r\n  {\r\n    type: TileEnum;\r\n    className: string;\r\n  }\r\n> {\r\n  constructor(props: {\r\n    key: number;\r\n    id: number;\r\n    isDown: boolean;\r\n    selectedType: TileEnum;\r\n    placeStart: () => boolean;\r\n    placeGoal: () => boolean;\r\n    removeStart: () => void;\r\n    removeGoal: () => void;\r\n  }) {\r\n    super(props);\r\n    this.state = {\r\n      type: TileEnum.Default,\r\n      className: \"default-tile\",\r\n    };\r\n  }\r\n\r\n  changeType() {\r\n    if (this.props.selectedType !== this.state.type) {\r\n      this.handleSpecialRemovals();\r\n\r\n      this.setState({ type: this.props.selectedType }, () => {\r\n        switch (this.state.type) {\r\n          case TileEnum.Default:\r\n            this.setState({ className: \"default-tile\" });\r\n            break;\r\n          case TileEnum.Start:\r\n            if (!this.props.placeStart()) break;\r\n            this.setState({ className: \"start-tile\" });\r\n            break;\r\n          case TileEnum.Goal:\r\n            if (!this.props.placeGoal()) break;\r\n            this.setState({ className: \"goal-tile\" });\r\n            break;\r\n          case TileEnum.Wall:\r\n            this.setState({ className: \"wall-tile\" });\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSpecialRemovals() {\r\n    if (this.state.type === TileEnum.Start) this.props.removeStart();\r\n    else if (this.state.type === TileEnum.Goal) this.props.removeGoal();\r\n  }\r\n\r\n  handleMouseEnter() {\r\n    if (this.props.isDown) {\r\n      this.changeType();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const className = this.state.className;\r\n    return (\r\n      <div\r\n        className={className}\r\n        onMouseDownCapture={this.changeType.bind(this)}\r\n        onMouseEnter={this.handleMouseEnter.bind(this)}\r\n      >\r\n        <HoverTile />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction HoverTile(): JSX.Element {\r\n  const [opacity, setOpacity] = useState(0);\r\n  return (\r\n    <div\r\n      className=\"hover-tile\"\r\n      onMouseEnter={() => setOpacity(0.3)}\r\n      onMouseLeave={() => setOpacity(0)}\r\n      style={{ opacity: opacity }}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport Tile, { TileEnum } from \"./Tile\";\r\n\r\nexport default class Board extends React.Component<\r\n  {\r\n    isDown: boolean;\r\n    mouseDown: (down: boolean) => void;\r\n    selectedTileType: TileEnum;\r\n  },\r\n  { startPlaced: boolean; goalPlaced: boolean }\r\n> {\r\n  constructor(props: {\r\n    isDown: boolean;\r\n    mouseDown: (down: boolean) => void;\r\n    selectedTileType: TileEnum;\r\n  }) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      startPlaced: false,\r\n      goalPlaced: false,\r\n    };\r\n\r\n    this.placeStart = this.placeStart.bind(this);\r\n    this.placeGoal = this.placeGoal.bind(this);\r\n    this.removeStart = this.removeStart.bind(this);\r\n    this.removeGoal = this.removeGoal.bind(this);\r\n  }\r\n\r\n  placeStart() {\r\n    if (!this.state.startPlaced) {\r\n      this.setState({ startPlaced: true });\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  placeGoal() {\r\n    if (!this.state.goalPlaced) {\r\n      this.setState({ goalPlaced: true });\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  removeStart() {\r\n    this.setState({ startPlaced: false });\r\n  }\r\n\r\n  removeGoal() {\r\n    this.setState({ goalPlaced: false });\r\n  }\r\n\r\n  renderSquare(i: number) {\r\n    return (\r\n      <Tile\r\n        key={i}\r\n        id={i}\r\n        isDown={this.props.isDown}\r\n        selectedType={this.props.selectedTileType}\r\n        placeStart={this.placeStart}\r\n        placeGoal={this.placeGoal}\r\n        removeStart={this.removeStart}\r\n        removeGoal={this.removeGoal}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let tiles = [];\r\n\r\n    for (let i = 0; i < 100; i++) {\r\n      tiles.push(this.renderSquare(i));\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"Board\"\r\n          onContextMenu={(e) => e.preventDefault()}\r\n          onMouseDown={() => this.props.mouseDown(true)}\r\n          onMouseUp={() => this.props.mouseDown(false)}\r\n          onDragStart={(e) => e.preventDefault()}\r\n        >\r\n          {tiles}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { TileEnum } from \"./Tile\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\n\r\nexport default class TileSelector extends React.Component<\r\n  { setSelectedTileType: (type: TileEnum) => void },\r\n  {}\r\n> {\r\n\r\n  render() {\r\n    return (\r\n      <StylesProvider injectFirst>\r\n        <div className=\"TileSelector\">\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"start-btn\"\r\n            onClick={() => this.props.setSelectedTileType(TileEnum.Start)}\r\n          >\r\n            Start\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"goal-btn\"\r\n            onClick={() => this.props.setSelectedTileType(TileEnum.Goal)}\r\n          >\r\n            Goal\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"wall-btn\"\r\n            onClick={() => this.props.setSelectedTileType(TileEnum.Wall)}\r\n          >\r\n            Wall\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"erase-btn\"\r\n            onClick={() => this.props.setSelectedTileType(TileEnum.Default)}\r\n          >\r\n            Erase\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"play-btn\"\r\n            onClick={() => this.props.setSelectedTileType(TileEnum.Default)}\r\n          >\r\n            Play\r\n          </Button>\r\n        </div>\r\n      </StylesProvider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Board from \"./Board\";\nimport { TileEnum } from \"./Tile\";\nimport TileSelector from \"./TileSelector\";\n\nexport default class App extends React.Component<\n  {},\n  { isDown: boolean; selectedTileType: TileEnum }\n> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = { isDown: false, selectedTileType: TileEnum.Default };\n\n    this.mouseDown = this.mouseDown.bind(this);\n    this.setSelectedTileType = this.setSelectedTileType.bind(this);\n  }\n\n  mouseDown(down: boolean) {\n    this.setState({ isDown: down });\n  }\n\n  setSelectedTileType(type: TileEnum) {\n    this.setState({ selectedTileType: type });\n  }\n\n  render() {\n    const isDown = this.state.isDown;\n    const selectedTileType = this.state.selectedTileType;\n\n    return (\n      <div\n        className=\"App\"\n        onMouseUp={() => this.mouseDown(false)}\n        onMouseLeave={() => this.mouseDown(false)}\n      >\n        <TileSelector setSelectedTileType={this.setSelectedTileType} />\n        <Board isDown={isDown} mouseDown={this.mouseDown} selectedTileType={selectedTileType}/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}